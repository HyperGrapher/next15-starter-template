name: Playwright Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*

    - name: Install pnpm
      run: npm install -g pnpm

    - name: Set environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:password@localhost:5432/test_db?schema=public" >> $GITHUB_ENV
        echo "AUTH_SECRET='YOUR_AUTH_SECRET'" >> $GITHUB_ENV
    
    - name: Cache pnpm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.pnpm-store
        key: pnpm-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
        restore-keys: |
          pnpm-${{ runner.os }}-

    - name: Install dependencies
      run: pnpm install

    - name: Set up PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql version: '17'
        postgresql db: 'test_db'
        postgresql user: 'postgres'
        postgresql password: 'password'
    

    - name: Cache Playwright browsers
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: playwright-${{ runner.os }}-${{ hashFiles('package.json') }}
        restore-keys: |
          playwright-${{ runner.os }}-
            
    - name: Install Playwright Browsers
      run: |
        export PLAYWRIGHT_BROWSERS_PATH=~/.cache/ms-playwright
        pnpm exec playwright install --with-deps
    
    - name: Run Prisma migrations
      run: npx prisma db push
    
    - name: Build Next.js app
      run: pnpm run build

    - name: Start Next.js app
      run: |
        nohup pnpm run start &

    - name: Run Playwright tests
      run: pnpm exec playwright test
    - uses: actions/upload-artifact@v4
      if: ${{ !cancelled() }}
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
